{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Ultimate UNRAID Dashboard The Ultimate UNRAID Dashboard (UUD) is my attempt to develop the Ultimate Grafana/Telegraf/InfluxDB/Plex/Tautulli/Varken dashboard. This entire endeavor started when one of our fellow users @hermy65 posed a simple, but complex question in another forum topic (see post #3). I decided to give it a shot, as I am an IT professional, specifically in enterprise data warehouse/SQL server. After a few days of hard work, UUD version 1.0 was released. We are currently on Version 1.5, and the project is in active development. If you are a Grafana developer, or have had experience building dashboards/panels for UNRAID, please let me know. I would love to collaborate. Screenshots Developers Primary Developer: @falconexe (USA) UUD Founder | Active Development | Panels | Database Queries | Look & Feel | GUI | Refinement | Support Co-Developer: @GilbN (Europe) Original Template | Back-end | Dynamics | REGEX | Support | Tutorials Contributors @hermy65 @atribe @Roxedus @SpencerJ @testdasi @ChatNoir @MammothJerk @FreeMan @danktankk @Dazog @MrLondon @LilTrublMakr - Initial creation of this documentation.","title":"Ultimate UNRAID Dashboard"},{"location":"#ultimate-unraid-dashboard","text":"The Ultimate UNRAID Dashboard (UUD) is my attempt to develop the Ultimate Grafana/Telegraf/InfluxDB/Plex/Tautulli/Varken dashboard. This entire endeavor started when one of our fellow users @hermy65 posed a simple, but complex question in another forum topic (see post #3). I decided to give it a shot, as I am an IT professional, specifically in enterprise data warehouse/SQL server. After a few days of hard work, UUD version 1.0 was released. We are currently on Version 1.5, and the project is in active development. If you are a Grafana developer, or have had experience building dashboards/panels for UNRAID, please let me know. I would love to collaborate.","title":"Ultimate UNRAID Dashboard"},{"location":"#screenshots","text":"","title":"Screenshots"},{"location":"#developers","text":"Primary Developer: @falconexe (USA) UUD Founder | Active Development | Panels | Database Queries | Look & Feel | GUI | Refinement | Support Co-Developer: @GilbN (Europe) Original Template | Back-end | Dynamics | REGEX | Support | Tutorials","title":"Developers"},{"location":"#contributors","text":"@hermy65 @atribe @Roxedus @SpencerJ @testdasi @ChatNoir @MammothJerk @FreeMan @danktankk @Dazog @MrLondon @LilTrublMakr - Initial creation of this documentation.","title":"Contributors"},{"location":"news/","text":"News TODO Decide between list or headers. List looks better IMO 2021-01-19: The UUD forum topic reaches 50,000 views! 2021-01-12: The Ultimate unRAID Dashboard membership is launched. 2021-01-11: The UUD tops 1,000 unique downloads 2021-01-07: UUD is featured as the FIRST \"Best of the Forum\" blog. Ultimate Unraid Dashboard Version 1.5 is Now Available 2021-01-06: UUD donations site is created. Information on how to donate is located here . 2020-12-31: UUD Version 1.5 is released. 2020-10-09: UUD Version 1.4 is released. 2020-09-28: UUD is featured in the Official unRAID Monthly Newsletter (September 2020)! Unraid Digest 016 - All things Unraid for September 2020 2020-09-21: UUD Version 1.3 is released. 2020-09-14: UUD Version 1.2 is released. 2020-09-12: UUD Version 1.1 is released. 2020-09-11: UUD is born and Version 1.0 is released. 2021-01-19 The UUD forum topic reaches 50,000 views! 2021-01-12 The Ultimate UNRAID Dashboard Membership is Launched 2021-01-11 The UUD Tops 1,000 Unique Downloads 2021-01-07 UUD is Featured as the FIRST \"Best of the Forum\" blog. Ultimate Unraid Dashboard Version 1.5 is Now Available 2021-01-06 UUD Donations Site is Created Information on how to donate is located here 2020-12-31 UUD Version 1.5 is released 2020-10-09 UUD Version 1.4 is released 2020-09-28 The UUD is Featured in the Official UNRAID Monthly Newsletter (September 2020)! Unraid Digest 016 - All things Unraid for September 2020 2020-09-21 UUD Version 1.3 is released 2020-09-14 UUD Version 1.2 is released 2020-09-12 UUD Version 1.1 is released 2020-09-11 The UUD is Born and Version 1.0 is released","title":"News"},{"location":"news/#news","text":"TODO Decide between list or headers. List looks better IMO 2021-01-19: The UUD forum topic reaches 50,000 views! 2021-01-12: The Ultimate unRAID Dashboard membership is launched. 2021-01-11: The UUD tops 1,000 unique downloads 2021-01-07: UUD is featured as the FIRST \"Best of the Forum\" blog. Ultimate Unraid Dashboard Version 1.5 is Now Available 2021-01-06: UUD donations site is created. Information on how to donate is located here . 2020-12-31: UUD Version 1.5 is released. 2020-10-09: UUD Version 1.4 is released. 2020-09-28: UUD is featured in the Official unRAID Monthly Newsletter (September 2020)! Unraid Digest 016 - All things Unraid for September 2020 2020-09-21: UUD Version 1.3 is released. 2020-09-14: UUD Version 1.2 is released. 2020-09-12: UUD Version 1.1 is released. 2020-09-11: UUD is born and Version 1.0 is released.","title":"News"},{"location":"news/#2021-01-19","text":"The UUD forum topic reaches 50,000 views!","title":"2021-01-19"},{"location":"news/#2021-01-12","text":"The Ultimate UNRAID Dashboard Membership is Launched","title":"2021-01-12"},{"location":"news/#2021-01-11","text":"The UUD Tops 1,000 Unique Downloads","title":"2021-01-11"},{"location":"news/#2021-01-07","text":"UUD is Featured as the FIRST \"Best of the Forum\" blog. Ultimate Unraid Dashboard Version 1.5 is Now Available","title":"2021-01-07"},{"location":"news/#2021-01-06","text":"UUD Donations Site is Created Information on how to donate is located here","title":"2021-01-06"},{"location":"news/#2020-12-31","text":"UUD Version 1.5 is released","title":"2020-12-31"},{"location":"news/#2020-10-09","text":"UUD Version 1.4 is released","title":"2020-10-09"},{"location":"news/#2020-09-28","text":"The UUD is Featured in the Official UNRAID Monthly Newsletter (September 2020)! Unraid Digest 016 - All things Unraid for September 2020","title":"2020-09-28"},{"location":"news/#2020-09-21","text":"UUD Version 1.3 is released","title":"2020-09-21"},{"location":"news/#2020-09-14","text":"UUD Version 1.2 is released","title":"2020-09-14"},{"location":"news/#2020-09-12","text":"UUD Version 1.1 is released","title":"2020-09-12"},{"location":"news/#2020-09-11","text":"The UUD is Born and Version 1.0 is released","title":"2020-09-11"},{"location":"styles/","text":"Abmonitions Supported Types Official Material Docs Default Note note Seealso seealso Abstract abstract Summary summary Tldr tldr Info info Todo todo Tip tip Hint hint Important important Success success Check check Done done Question question Help help Faq faq Warning warning Caution caution Attention attention Failure failure Fail fail Missing missing Danger danger Error error Bug bug Example example Quote quote Cite cite UUD Custom Code code","title":"Styles"},{"location":"styles/#abmonitions","text":"","title":"Abmonitions"},{"location":"styles/#supported-types","text":"Official Material Docs","title":"Supported Types"},{"location":"styles/#default","text":"Note note Seealso seealso Abstract abstract Summary summary Tldr tldr Info info Todo todo Tip tip Hint hint Important important Success success Check check Done done Question question Help help Faq faq Warning warning Caution caution Attention attention Failure failure Fail fail Missing missing Danger danger Error error Bug bug Example example Quote quote Cite cite","title":"Default"},{"location":"styles/#uud-custom","text":"Code code","title":"UUD Custom"},{"location":"todo/","text":"","title":"Todo"},{"location":"1.4.0/install14/","text":"Install Ultimate UNRAID Dashboard This guide will show you how to setup UUD on your UNRAID Server. While it does show how to set up most services to get you started with Grafana and UUD, it does assume that you have Plex and supporting applications set up already. This includes, but is not limited to, Plex Media Server, Sonarr, Radarr, and/or Ombi. Dependencies UNRAID Plugin: Community Applications Docker: InfluxDB Docker: Telegraf Docker: Grafana Docker: Tautulli Docker: Varken CA Plugin: IPMI Tools License: GeoLite2 Guide Install Community Applications This is a must have for any UNRAID Server. If you already have Community Applications (CA) installed, you can skip to the next step. On your UNRAID server, click on the Plugins tab on your toolbar. You should see a option Enter URL of remote plugin file or local plugin file . Enter https://raw.githubusercontent.com/Squidly271/community.applications/master/plugins/community.applications.plg and click on the Install button. You should now see an Apps tab on your toolbar. Install InfluxDB Docker Container Click on the Apps tab in the toolbar. In the search bar (upper right), search for InfluxDB and you should see one from \"atribe\". Click the install button on the lower left of the card. Settings All of the default settings will be fine though you can customize as you see fit. Name Setting Notes Host Port 1 8083 Host Port 2 8086 This is the port that you will use to access the database Host Path 1 /mnt/user/appdata/influxdb Start Container Click Apply and make sure the container was set up successfully. Authentication By default, InfluxDB has authentication disabled. This means that any application will be able to write data to InfluxDB using any set of credentials. If you would like to set up user authentication, please refer to the influx data documentation . Install Telegraf Attention This container needs a config file before being set up. Please read these instruction carefully as you will have problems if you do not follow the order of operations. Docker Container Click on the Apps tab in the toolbar. In the search bar (upper right), search for Telegraf and you should see one from \"atribe\". Click the install button on the lower left of the card. Settings So there is a setting you need to make sure are correct in this container: Network Type needs to be set to host . DO NOT HIT 'Apply' YET! Name Setting Notes Repository telegraf:latest You can use the alpine tag, but it is recommended to use latest Post Arguments /bin/sh -c 'apt update && apt install -y smartmontools && apt install -y lm-sensors && apt install -y nvme-cli && apt install -y ipmitool && telegraf' Network Type host IT IS IMPORTANT THAT YOU USE HOST! Host Path 1 /var/run/utmp Host Path 2 /var/run/docker.sock Host Path 3 / Host Path 4 /sys Host Path 5 /etc Host Path 6 /proc Host Path 7 /mnt/user/appdata/telegraf/telegraf.conf Make note of this directory. We will need it in the next step. Host Path 8 /run/udev If this is not here, follow the instructions below to add this. Key 1 /rootfs/proc Key 2 /rootfs/sys Key 3 /rootfs/etc Key 4 /rootfs Warning DO NOT HIT APPLY TO START THE CONTAINER YET! We need to set up the configuration file first! Adding /run/udev If you do not have this in your variables, scroll to the bottom of the page and find the + Add another Path, Port, Variable, Label or Device link just above the Apply , Done , and Save buttons. In the windows that pops up, enter in the following: Name Setting Notes Config Type Path Name enter in name or leave blank You can leave this blank if you wish Container Path /run/udev Host Path /run/udev Default Value /run/udev Access Mode Read/Write Description Leave blank Display Always Required Yes It will be filled in already so you can leave it on no if you want to. Password Mask No Click on the ADD button. Warning DO NOT HIT APPLY TO START THE CONTAINER YET! We need to set up the configuration file first! telegraf.conf In your settings, you should have noted a path in the previous step for Host Path 7 . You need to navigate to that folder (you will probably have to create the telegraf folder) and place a telegraf.conf file in that folder. Default Config File You can find a default telegraf.conf on the official Telegraf GitHub . Raw version . If you want to edit the default config, here are the edits you need to make: Search for [[inputs.net]] Enable by removing the # in the front of the line. Search for [[inputs.docker]] Enable by removing the # in the front of the line. Search for [[inputs.diskio]] Enable by removing the # in the front of the line. To use static drive serial numbers in Grafana (for DiskIO queries) do the following: Edit telegraf.conf > [[inputs.diskio]] > uncomment the line (remove the #) with device_tags = [\"ID_SERIAL\"] . Use ID_SERIAL flag in Grafana. Now upon booting, you don't have to worry about SD mounts changing. You can also set up overrides on the query fields map the serial number to a common disk name like \"disk01\", etc. Search for [[inputs.smart]] Enable by removing the # in the front of the line. Also enable attributes = true by removing the # in the front of the line. Search for [[inputs.ipmi_sensor]] Enable by removing the # in the front of the line. Search for [[inputs.apcupsd]] Enable by removing the # in the front of the line. In UNRAID settings > UPS Settings, make sure Start APC UPS daemon is set to Yes . When completed, this file should be placed in the folder that we noted above. (Default is /mnt/user/appdata/telegraf/ ). Continue to the next step . Edited Config File If you want to just get up and running, you can download an already edited config file from this GitHub Repository . Raw link . This file should be placed in the folder that we noted above. (Default is /mnt/user/appdata/telegraf/ ). Continue to the next step . Start the Container Now, we can finally start the container. Click on Apply to start the container. When you are back on the Docker tab of UNRAID, click on the logs button on the far right side of the Telegraf container to open the container logs. You are waiting for the container to start up fully. You should see something along the lines of: 2021-01-13T14:21:36Z I! Starting Telegraf 1.17.0 2021-01-13T14:21:36Z I! Using config file: /etc/telegraf/telegraf.conf Install Grafana Docker Container Click on the Apps tab in the toolbar. In the search bar (upper right), search for Grafana and you should see one from \"atribe\". Click the install button on the lower left of the card. Settings So there is a setting you need to make sure are correct in this container: Network Type needs to be set to host . Name Setting Notes Host Port 1 3000 You can leave this default Host Path 1 /mnt/user/appdata/grafana You can leave this default Key 1 ip address Enter in the ip of your server. Key 2 enter in password Enter in the password you would like to use for the admin account. Start the Container Click Apply to start the container. Info If you do not care about the media portion of UUD, you can skip the rest of this guide. I would recommend you download UUD 1.4. It has everything this dashboard has but the media monitoring. You can find more information about UUD 1.4 here . TODO 1.4 link Ultimate UNRIAD Dashboard","title":"Install"},{"location":"1.4.0/install14/#install-ultimate-unraid-dashboard","text":"This guide will show you how to setup UUD on your UNRAID Server. While it does show how to set up most services to get you started with Grafana and UUD, it does assume that you have Plex and supporting applications set up already. This includes, but is not limited to, Plex Media Server, Sonarr, Radarr, and/or Ombi.","title":"Install Ultimate UNRAID Dashboard"},{"location":"1.4.0/install14/#dependencies","text":"UNRAID Plugin: Community Applications Docker: InfluxDB Docker: Telegraf Docker: Grafana Docker: Tautulli Docker: Varken CA Plugin: IPMI Tools License: GeoLite2","title":"Dependencies"},{"location":"1.4.0/install14/#guide","text":"","title":"Guide"},{"location":"1.4.0/install14/#install-community-applications","text":"This is a must have for any UNRAID Server. If you already have Community Applications (CA) installed, you can skip to the next step. On your UNRAID server, click on the Plugins tab on your toolbar. You should see a option Enter URL of remote plugin file or local plugin file . Enter https://raw.githubusercontent.com/Squidly271/community.applications/master/plugins/community.applications.plg and click on the Install button. You should now see an Apps tab on your toolbar.","title":"Install Community Applications"},{"location":"1.4.0/install14/#install-influxdb","text":"","title":"Install InfluxDB"},{"location":"1.4.0/install14/#docker-container","text":"Click on the Apps tab in the toolbar. In the search bar (upper right), search for InfluxDB and you should see one from \"atribe\". Click the install button on the lower left of the card.","title":"Docker Container"},{"location":"1.4.0/install14/#settings","text":"All of the default settings will be fine though you can customize as you see fit. Name Setting Notes Host Port 1 8083 Host Port 2 8086 This is the port that you will use to access the database Host Path 1 /mnt/user/appdata/influxdb","title":"Settings"},{"location":"1.4.0/install14/#start-container","text":"Click Apply and make sure the container was set up successfully.","title":"Start Container"},{"location":"1.4.0/install14/#authentication","text":"By default, InfluxDB has authentication disabled. This means that any application will be able to write data to InfluxDB using any set of credentials. If you would like to set up user authentication, please refer to the influx data documentation .","title":"Authentication"},{"location":"1.4.0/install14/#install-telegraf","text":"Attention This container needs a config file before being set up. Please read these instruction carefully as you will have problems if you do not follow the order of operations.","title":"Install Telegraf"},{"location":"1.4.0/install14/#docker-container_1","text":"Click on the Apps tab in the toolbar. In the search bar (upper right), search for Telegraf and you should see one from \"atribe\". Click the install button on the lower left of the card.","title":"Docker Container"},{"location":"1.4.0/install14/#settings_1","text":"So there is a setting you need to make sure are correct in this container: Network Type needs to be set to host . DO NOT HIT 'Apply' YET! Name Setting Notes Repository telegraf:latest You can use the alpine tag, but it is recommended to use latest Post Arguments /bin/sh -c 'apt update && apt install -y smartmontools && apt install -y lm-sensors && apt install -y nvme-cli && apt install -y ipmitool && telegraf' Network Type host IT IS IMPORTANT THAT YOU USE HOST! Host Path 1 /var/run/utmp Host Path 2 /var/run/docker.sock Host Path 3 / Host Path 4 /sys Host Path 5 /etc Host Path 6 /proc Host Path 7 /mnt/user/appdata/telegraf/telegraf.conf Make note of this directory. We will need it in the next step. Host Path 8 /run/udev If this is not here, follow the instructions below to add this. Key 1 /rootfs/proc Key 2 /rootfs/sys Key 3 /rootfs/etc Key 4 /rootfs Warning DO NOT HIT APPLY TO START THE CONTAINER YET! We need to set up the configuration file first!","title":"Settings"},{"location":"1.4.0/install14/#adding-runudev","text":"If you do not have this in your variables, scroll to the bottom of the page and find the + Add another Path, Port, Variable, Label or Device link just above the Apply , Done , and Save buttons. In the windows that pops up, enter in the following: Name Setting Notes Config Type Path Name enter in name or leave blank You can leave this blank if you wish Container Path /run/udev Host Path /run/udev Default Value /run/udev Access Mode Read/Write Description Leave blank Display Always Required Yes It will be filled in already so you can leave it on no if you want to. Password Mask No Click on the ADD button. Warning DO NOT HIT APPLY TO START THE CONTAINER YET! We need to set up the configuration file first!","title":"Adding /run/udev"},{"location":"1.4.0/install14/#telegrafconf","text":"In your settings, you should have noted a path in the previous step for Host Path 7 . You need to navigate to that folder (you will probably have to create the telegraf folder) and place a telegraf.conf file in that folder.","title":"telegraf.conf"},{"location":"1.4.0/install14/#default-config-file","text":"You can find a default telegraf.conf on the official Telegraf GitHub . Raw version . If you want to edit the default config, here are the edits you need to make: Search for [[inputs.net]] Enable by removing the # in the front of the line. Search for [[inputs.docker]] Enable by removing the # in the front of the line. Search for [[inputs.diskio]] Enable by removing the # in the front of the line. To use static drive serial numbers in Grafana (for DiskIO queries) do the following: Edit telegraf.conf > [[inputs.diskio]] > uncomment the line (remove the #) with device_tags = [\"ID_SERIAL\"] . Use ID_SERIAL flag in Grafana. Now upon booting, you don't have to worry about SD mounts changing. You can also set up overrides on the query fields map the serial number to a common disk name like \"disk01\", etc. Search for [[inputs.smart]] Enable by removing the # in the front of the line. Also enable attributes = true by removing the # in the front of the line. Search for [[inputs.ipmi_sensor]] Enable by removing the # in the front of the line. Search for [[inputs.apcupsd]] Enable by removing the # in the front of the line. In UNRAID settings > UPS Settings, make sure Start APC UPS daemon is set to Yes . When completed, this file should be placed in the folder that we noted above. (Default is /mnt/user/appdata/telegraf/ ). Continue to the next step .","title":"Default Config File"},{"location":"1.4.0/install14/#edited-config-file","text":"If you want to just get up and running, you can download an already edited config file from this GitHub Repository . Raw link . This file should be placed in the folder that we noted above. (Default is /mnt/user/appdata/telegraf/ ). Continue to the next step .","title":"Edited Config File"},{"location":"1.4.0/install14/#start-the-container","text":"Now, we can finally start the container. Click on Apply to start the container. When you are back on the Docker tab of UNRAID, click on the logs button on the far right side of the Telegraf container to open the container logs. You are waiting for the container to start up fully. You should see something along the lines of: 2021-01-13T14:21:36Z I! Starting Telegraf 1.17.0 2021-01-13T14:21:36Z I! Using config file: /etc/telegraf/telegraf.conf","title":"Start the Container"},{"location":"1.4.0/install14/#install-grafana","text":"","title":"Install Grafana"},{"location":"1.4.0/install14/#docker-container_2","text":"Click on the Apps tab in the toolbar. In the search bar (upper right), search for Grafana and you should see one from \"atribe\". Click the install button on the lower left of the card.","title":"Docker Container"},{"location":"1.4.0/install14/#settings_2","text":"So there is a setting you need to make sure are correct in this container: Network Type needs to be set to host . Name Setting Notes Host Port 1 3000 You can leave this default Host Path 1 /mnt/user/appdata/grafana You can leave this default Key 1 ip address Enter in the ip of your server. Key 2 enter in password Enter in the password you would like to use for the admin account.","title":"Settings"},{"location":"1.4.0/install14/#start-the-container_1","text":"Click Apply to start the container. Info If you do not care about the media portion of UUD, you can skip the rest of this guide. I would recommend you download UUD 1.4. It has everything this dashboard has but the media monitoring. You can find more information about UUD 1.4 here . TODO 1.4 link","title":"Start the Container"},{"location":"1.4.0/install14/#ultimate-unriad-dashboard","text":"","title":"Ultimate UNRIAD Dashboard"},{"location":"1.5.0/README15/","text":"Ultimate UNRAID Dashboard 1.5.x The Ultimate UNRAID Dashboard Version 1.5 is here! This is another HUGE \ud83d\ude01 update adding INTEGRATED PLEX Monitoring via Varken/Tautulli. This update is loosely derived from the official Varken dashboard, but I stripped it down to the bolts, modded the crap out of it, and streamlined it with a straight Plex focus. Honestly, the only code that sill remains from their official dash is the single geo-mapping graph, as it is not actually an editable panel, but rather straight JSON code. I wanted to say thank you to that team for providing a great baseline to start from, and all of their previous work! The UUD Version 1.5 adds 50 new Panels within 3 new sections . I have placed these strategically within the UUD right below the Overwatch section, as this is the second data set that I would want to see, right after my overall server health. As always, with greater features, comes a greater need for plugins and dependencies. I have provided links and resources below to help you along. New Dependencies Install guides/tutorials: https://github.com/Boerderij/Varken https://wiki.cajun.pro/books/varken/chapter/installation https://dev.maxmind.com/geoip/geoip2/geolite2/ Dockers: Varken (Install with default setup / Follow current project install guide) Tautuilli (Install with default setup / Follow current project install guide) Docker AppData: Varken config (Follow varken install guide) New Grafana data source: \"Varken\" New Grafana plugins Pie Chart Panel Run following command in Docker: grafana-cli plugins install grafana-piechart-panel World Map Run following command in Docker: grafana-cli plugins install grafana-worldmap-panel Third party: FREE GeoLite2 license registration (Follow Varken install guide) Without this, the MAP WILL NOT WORK. Please Note: This release is an example tailored to MY Plex setup/library. The intent here is that you will take this and modify it for your Plex Library/Setup. You have everything you require to template new panels and to add new media sections as needed! Highlights Real time Plex monitoring Extremely detailed breakdown of all current streams Current number of streams Internal and external streaming bandwidth breakdown Stream origination (geo location) with interactive map Streaming types Streaming devices Detailed user monitoring Current library statistics broken out by library sections Plex library growth Plex library growth over time (day/week/month/year) Currently templated for following media sections TV shows Movies Documentary TV shows Documentary movies Anime shows Music You can add more... Historical Plex monitoring Heat maps to see your overall streaming saturation (last day/week/month/year) Device types (last month) Stream types (last month) Media types (last month) Media streaming qualities (last month) Stream log (last week with limit of last 1,000 for performance reasons) Log captures all streaming activity via 10 minute intervals Screenshots","title":"News"},{"location":"1.5.0/README15/#ultimate-unraid-dashboard-15x","text":"The Ultimate UNRAID Dashboard Version 1.5 is here! This is another HUGE \ud83d\ude01 update adding INTEGRATED PLEX Monitoring via Varken/Tautulli. This update is loosely derived from the official Varken dashboard, but I stripped it down to the bolts, modded the crap out of it, and streamlined it with a straight Plex focus. Honestly, the only code that sill remains from their official dash is the single geo-mapping graph, as it is not actually an editable panel, but rather straight JSON code. I wanted to say thank you to that team for providing a great baseline to start from, and all of their previous work! The UUD Version 1.5 adds 50 new Panels within 3 new sections . I have placed these strategically within the UUD right below the Overwatch section, as this is the second data set that I would want to see, right after my overall server health. As always, with greater features, comes a greater need for plugins and dependencies. I have provided links and resources below to help you along.","title":"Ultimate UNRAID Dashboard 1.5.x"},{"location":"1.5.0/README15/#new-dependencies","text":"Install guides/tutorials: https://github.com/Boerderij/Varken https://wiki.cajun.pro/books/varken/chapter/installation https://dev.maxmind.com/geoip/geoip2/geolite2/ Dockers: Varken (Install with default setup / Follow current project install guide) Tautuilli (Install with default setup / Follow current project install guide) Docker AppData: Varken config (Follow varken install guide) New Grafana data source: \"Varken\" New Grafana plugins Pie Chart Panel Run following command in Docker: grafana-cli plugins install grafana-piechart-panel World Map Run following command in Docker: grafana-cli plugins install grafana-worldmap-panel Third party: FREE GeoLite2 license registration (Follow Varken install guide) Without this, the MAP WILL NOT WORK. Please Note: This release is an example tailored to MY Plex setup/library. The intent here is that you will take this and modify it for your Plex Library/Setup. You have everything you require to template new panels and to add new media sections as needed!","title":"New Dependencies"},{"location":"1.5.0/README15/#highlights","text":"Real time Plex monitoring Extremely detailed breakdown of all current streams Current number of streams Internal and external streaming bandwidth breakdown Stream origination (geo location) with interactive map Streaming types Streaming devices Detailed user monitoring Current library statistics broken out by library sections Plex library growth Plex library growth over time (day/week/month/year) Currently templated for following media sections TV shows Movies Documentary TV shows Documentary movies Anime shows Music You can add more... Historical Plex monitoring Heat maps to see your overall streaming saturation (last day/week/month/year) Device types (last month) Stream types (last month) Media types (last month) Media streaming qualities (last month) Stream log (last week with limit of last 1,000 for performance reasons) Log captures all streaming activity via 10 minute intervals","title":"Highlights"},{"location":"1.5.0/README15/#screenshots","text":"","title":"Screenshots"},{"location":"1.5.0/install15/","text":"Install Ultimate unRAID Dashboard This guide will show you how to setup UUD on your unRAID Server. While it does show how to set up most services to get you started with Grafana and UUD, it does assume that you have Plex and supporting applications set up already. This includes, but is not limited to, Plex Media Server, Sonarr, Radarr, and/or Ombi. Dependencies unRAID Plugin: Community Applications Docker: InfluxDB Docker: Telegraf Docker: Grafana Docker: Tautulli Docker: Varken CA Plugin: IPMI Tools License: GeoLite2 Guide Install Community Applications This is a must have for any unRAID Server. If you already have Community Applications (CA) installed, you can skip to the next step. On your unRAID server, click on the Plugins tab on your toolbar. You should see a option Enter URL of remote plugin file or local plugin file . Enter https://raw.githubusercontent.com/Squidly271/community.applications/master/plugins/community.applications.plg and click on the Install button. You should now see an Apps tab on your toolbar. Install InfluxDB Docker Container Click on the Apps tab in the toolbar. In the search bar (upper right), search for InfluxDB and you should see one from \"atribe\". Click the install button on the lower left of the card. Settings All of the default settings will be fine though you can customize as you see fit. Name Setting Notes Host Port 1 8083 Host Port 2 8086 This is the port that you will use to access the database Host Path 1 /mnt/user/appdata/influxdb Start Container Click Apply and make sure the container was set up successfully. Authentication By default, InfluxDB has authentication disabled. This means that any application will be able to write data to InfluxDB using any set of credentials. If you would like to set up user authentication, please refer to the influx data documentation . Install Telegraf Attention This container needs a config file before being set up. Please read these instruction carefully as you will have problems if you do not follow the order of operations. Docker Container Click on the Apps tab in the toolbar. In the search bar (upper right), search for Telegraf and you should see one from \"atribe\". Click the install button on the lower left of the card. Settings So there is a setting you need to make sure are correct in this container: Network Type needs to be set to host . DO NOT HIT 'Apply' YET! Name Setting Notes Repository telegraf:latest You can use the alpine tag, but it is recommended to use latest Post Arguments /bin/sh -c 'apt update && apt install -y smartmontools && apt install -y lm-sensors && apt install -y nvme-cli && apt install -y ipmitool && telegraf' Network Type host IT IS IMPORTANT THAT YOU USE HOST! Host Path 1 /var/run/utmp Host Path 2 /var/run/docker.sock Host Path 3 / Host Path 4 /sys Host Path 5 /etc Host Path 6 /proc Host Path 7 /mnt/user/appdata/telegraf/telegraf.conf Make note of this directory. We will need it in the next step. Host Path 8 /run/udev If this is not here, follow the instructions below to add this. Key 1 /rootfs/proc Key 2 /rootfs/sys Key 3 /rootfs/etc Key 4 /rootfs Warning DO NOT HIT APPLY TO START THE CONTAINER YET! We need to set up the configuration file first! Adding /run/udev If you do not have this in your variables, scroll to the bottom of the page and find the + Add another Path, Port, Variable, Label or Device link just above the Apply , Done , and Save buttons. In the windows that pops up, enter in the following: Name Setting Notes Config Type Path Name enter in name or leave blank You can leave this blank if you wish Container Path /run/udev Host Path /run/udev Default Value /run/udev Access Mode Read/Write Description Leave blank Display Always Required Yes It will be filled in already so you can leave it on no if you want to. Password Mask No Click on the ADD button. Warning DO NOT HIT APPLY TO START THE CONTAINER YET! We need to set up the configuration file first! telegraf.conf In your settings, you should have noted a path in the previous step for Host Path 7 . You need to navigate to that folder (you will probably have to create the telegraf folder) and place a telegraf.conf file in that folder. Default Config File You can find a default telegraf.conf on the official Telegraf GitHub . Raw version . If you want to edit the default config, here are the edits you need to make: Search for [[inputs.net]] Enable by removing the # in the front of the line. Search for [[inputs.docker]] Enable by removing the # in the front of the line. Search for [[inputs.diskio]] Enable by removing the # in the front of the line. To use static drive serial numbers in Grafana (for DiskIO queries) do the following: Edit telegraf.conf > [[inputs.diskio]] > uncomment the line (remove the #) with device_tags = [\"ID_SERIAL\"] . Use ID_SERIAL flag in Grafana. Now upon booting, you don't have to worry about SD mounts changing. You can also set up overrides on the query fields map the serial number to a common disk name like \"disk01\", etc. Search for [[inputs.smart]] Enable by removing the # in the front of the line. Also enable attributes = true by removing the # in the front of the line. Search for [[inputs.ipmi_sensor]] Enable by removing the # in the front of the line. Search for [[inputs.apcupsd]] Enable by removing the # in the front of the line. In unRAID settings > UPS Settings, make sure Start APC UPS daemon is set to Yes . When completed, this file should be placed in the folder that we noted above. (Default is /mnt/user/appdata/telegraf/ ). Continue to the next step . Edited Config File If you want to just get up and running, you can download an already edited config file from this GitHub Repository . Raw link . This file should be placed in the folder that we noted above. (Default is /mnt/user/appdata/telegraf/ ). Continue to the next step . Start the Container Now, we can finally start the container. Click on Apply to start the container. When you are back on the Docker tab of unRAID, click on the logs button on the far right side of the Telegraf container to open the container logs. You are waiting for the container to start up fully. You should see something along the lines of: 2021-01-13T14:21:36Z I! Starting Telegraf 1.17.0 2021-01-13T14:21:36Z I! Using config file: /etc/telegraf/telegraf.conf Install Grafana Docker Container Click on the Apps tab in the toolbar. In the search bar (upper right), search for Grafana and you should see one from \"atribe\". Click the install button on the lower left of the card. Settings So there is a setting you need to make sure are correct in this container: Network Type needs to be set to host . Name Setting Notes Host Port 1 3000 You can leave this default Host Path 1 /mnt/user/appdata/grafana You can leave this default Key 1 ip address Enter in the ip of your server. Key 2 enter in password Enter in the password you would like to use for the admin account. Start the Container Click Apply to start the container. Info If you do not care about the media portion of UUD, you can skip the rest of this guide. I would recommend you download UUD 1.4. It has everything this dashboard has but the media monitoring. You can find more information about UUD 1.4 here . TODO 1.4 link Install Tautulli Docker Container Click on the Apps tab in the toolbar. In the search bar (upper right), search for Tautulli . There are actually multiple versions: linuxserver, official, and hotio. While any of them should work, I will be using the one from \"linuxserver\". Settings Default settings will work. Name Setting Notes Host Port 1 8181 You can leave this default Host Path 1 /mnt/user/appdata/tautulli/logs/ You can leave this default Key 1 99 You can leave this default Key 2 100 You can leave this default AppData Config Path /mnt/user/appdata/tautulli/config/ This is found under \"Show more settings\" Start the Container Click Apply to start the container. Complete the Tautulli Setup Click on the Docker tab of unRAID. Left click on the Tautulli icon and click on Web UI . On the Welcome screen, click on Next . On the Authentication screen, set the username and password you would like to use to access the administration panel of Tautulli. On the Plex Account screen, click the Sign In with Plex button. After you authenticate with your Plex account, click the Next button On the Plex Media Server screen, select your Plex server that has the internal IP. It should start with 172.x.x.x. Fill in the rest of the options as appropriate. Click on the Verify button. You should see next to it Server found! Click the Next button. On the Activity Logging page, adjust to your Ignore Interval to your liking. Click the Next button. For the next two screens, click on the Next button. Finally, click on the Finish button. Obtain the Tautulli API Key When you are on the main window of Tautulli, click on the cogs icon ( ) in the upper right corner > settings > Web Interface . Near the bottom of that page, you should see a section for your API . Either keep this page open, or copy your API key to a text document to use in the Varken Setup . Obtain MaxMindDB Key For Tautulli to work correctly, you need to obtain a MaxMind GeoLite license. This is free to do. 1: Sign up for a MaxMind account . Make sure to verify the account. 2: When logged in, click on the My account button in the upper right corner as denoted by the symbol and click on MY ACCOUNT . 3: Click on My License Key from the left side menu. 4: Click on Generate new license key button. 5: Enter in a description. I suggest \"Varken\". 6: For the prompt under the description asking about using GeoIP Update, select No . 7: Click Confirm . On the next screen, you will be presented with your license key. Keep this page open for the next step or copy your key to a safe place. If you close the page, you will not be able to see the key again. If this happens, you can create a new key. Install Varken Docker Container Click on the Apps tab in the toolbar. In the search bar (upper right), search for Varken and you should see one from \"Bander\". Click the install button on the lower left of the card. Settings All of the default settings will work. I do advise you to change the time zone to your correct time zone. A list of time zones can be found here . You would be using the TZ database name column. Take note of where your config file will be located. Warning DO NOT HIT APPLY TO START THE CONTAINER YET! We need to set up the configuration file first! varken.ini You need to edit the configuration yourself since it requires API keys. You can find the default varken.ini file on GitHub ( Raw version ). For more information on how to setup the Varken configuration, please visit this page . Start the Container Now that you have your configuration file set and in the proper place, we can go back to the container creation screen of Varken and click Apply to create and start the container. Ultimate UNRIAD Dashboard TODO Find out if we are using github to distribute files or the unRAID forums Go to the Ultimate unRAID Dashboard forum Topic and scroll to the bottom of the first post. You will see a file attachment for VERSION 1.5. Click on the file attachment to download the JSON file. Right click on this link and click \"Save target as...\" Configuring Grafana In the Docker tab in unRAID, click on the Grafana icon and then select WebUI . When you are asked to log in, the default user is admin and the password is the one you set up while setting up Grafana . Adding Data Sources In the left menu, hover over the cog icon ( ) and then click on Data Sources . On the screen that opens up, click on Add Data Source . Telegraf Fill in the settings. If the setting is not in the table below, you can leave it default. Name Setting Notes Name InfluxDB You can name this what you want. I suggest InfluxDB or Telegraf Query Language InfluxQL HTML URL http://localhost:8686 Set this to the IP address of your server InfluxDB Details Database telegraf Case sensitive User Leave Blank Put in your username if you set one up. Setting one up is beyond the scope of this guide. Password Leave Blank Put in your password if you set one up. Setting one up is beyond the scope of this guide. Click on the Save & Test button and make sure you get a green bar just above saying Data source is working .","title":"Install"},{"location":"1.5.0/install15/#install-ultimate-unraid-dashboard","text":"This guide will show you how to setup UUD on your unRAID Server. While it does show how to set up most services to get you started with Grafana and UUD, it does assume that you have Plex and supporting applications set up already. This includes, but is not limited to, Plex Media Server, Sonarr, Radarr, and/or Ombi.","title":"Install Ultimate unRAID Dashboard"},{"location":"1.5.0/install15/#dependencies","text":"unRAID Plugin: Community Applications Docker: InfluxDB Docker: Telegraf Docker: Grafana Docker: Tautulli Docker: Varken CA Plugin: IPMI Tools License: GeoLite2","title":"Dependencies"},{"location":"1.5.0/install15/#guide","text":"","title":"Guide"},{"location":"1.5.0/install15/#install-community-applications","text":"This is a must have for any unRAID Server. If you already have Community Applications (CA) installed, you can skip to the next step. On your unRAID server, click on the Plugins tab on your toolbar. You should see a option Enter URL of remote plugin file or local plugin file . Enter https://raw.githubusercontent.com/Squidly271/community.applications/master/plugins/community.applications.plg and click on the Install button. You should now see an Apps tab on your toolbar.","title":"Install Community Applications"},{"location":"1.5.0/install15/#install-influxdb","text":"","title":"Install InfluxDB"},{"location":"1.5.0/install15/#docker-container","text":"Click on the Apps tab in the toolbar. In the search bar (upper right), search for InfluxDB and you should see one from \"atribe\". Click the install button on the lower left of the card.","title":"Docker Container"},{"location":"1.5.0/install15/#settings","text":"All of the default settings will be fine though you can customize as you see fit. Name Setting Notes Host Port 1 8083 Host Port 2 8086 This is the port that you will use to access the database Host Path 1 /mnt/user/appdata/influxdb","title":"Settings"},{"location":"1.5.0/install15/#start-container","text":"Click Apply and make sure the container was set up successfully.","title":"Start Container"},{"location":"1.5.0/install15/#authentication","text":"By default, InfluxDB has authentication disabled. This means that any application will be able to write data to InfluxDB using any set of credentials. If you would like to set up user authentication, please refer to the influx data documentation .","title":"Authentication"},{"location":"1.5.0/install15/#install-telegraf","text":"Attention This container needs a config file before being set up. Please read these instruction carefully as you will have problems if you do not follow the order of operations.","title":"Install Telegraf"},{"location":"1.5.0/install15/#docker-container_1","text":"Click on the Apps tab in the toolbar. In the search bar (upper right), search for Telegraf and you should see one from \"atribe\". Click the install button on the lower left of the card.","title":"Docker Container"},{"location":"1.5.0/install15/#settings_1","text":"So there is a setting you need to make sure are correct in this container: Network Type needs to be set to host . DO NOT HIT 'Apply' YET! Name Setting Notes Repository telegraf:latest You can use the alpine tag, but it is recommended to use latest Post Arguments /bin/sh -c 'apt update && apt install -y smartmontools && apt install -y lm-sensors && apt install -y nvme-cli && apt install -y ipmitool && telegraf' Network Type host IT IS IMPORTANT THAT YOU USE HOST! Host Path 1 /var/run/utmp Host Path 2 /var/run/docker.sock Host Path 3 / Host Path 4 /sys Host Path 5 /etc Host Path 6 /proc Host Path 7 /mnt/user/appdata/telegraf/telegraf.conf Make note of this directory. We will need it in the next step. Host Path 8 /run/udev If this is not here, follow the instructions below to add this. Key 1 /rootfs/proc Key 2 /rootfs/sys Key 3 /rootfs/etc Key 4 /rootfs Warning DO NOT HIT APPLY TO START THE CONTAINER YET! We need to set up the configuration file first!","title":"Settings"},{"location":"1.5.0/install15/#adding-runudev","text":"If you do not have this in your variables, scroll to the bottom of the page and find the + Add another Path, Port, Variable, Label or Device link just above the Apply , Done , and Save buttons. In the windows that pops up, enter in the following: Name Setting Notes Config Type Path Name enter in name or leave blank You can leave this blank if you wish Container Path /run/udev Host Path /run/udev Default Value /run/udev Access Mode Read/Write Description Leave blank Display Always Required Yes It will be filled in already so you can leave it on no if you want to. Password Mask No Click on the ADD button. Warning DO NOT HIT APPLY TO START THE CONTAINER YET! We need to set up the configuration file first!","title":"Adding /run/udev"},{"location":"1.5.0/install15/#telegrafconf","text":"In your settings, you should have noted a path in the previous step for Host Path 7 . You need to navigate to that folder (you will probably have to create the telegraf folder) and place a telegraf.conf file in that folder.","title":"telegraf.conf"},{"location":"1.5.0/install15/#default-config-file","text":"You can find a default telegraf.conf on the official Telegraf GitHub . Raw version . If you want to edit the default config, here are the edits you need to make: Search for [[inputs.net]] Enable by removing the # in the front of the line. Search for [[inputs.docker]] Enable by removing the # in the front of the line. Search for [[inputs.diskio]] Enable by removing the # in the front of the line. To use static drive serial numbers in Grafana (for DiskIO queries) do the following: Edit telegraf.conf > [[inputs.diskio]] > uncomment the line (remove the #) with device_tags = [\"ID_SERIAL\"] . Use ID_SERIAL flag in Grafana. Now upon booting, you don't have to worry about SD mounts changing. You can also set up overrides on the query fields map the serial number to a common disk name like \"disk01\", etc. Search for [[inputs.smart]] Enable by removing the # in the front of the line. Also enable attributes = true by removing the # in the front of the line. Search for [[inputs.ipmi_sensor]] Enable by removing the # in the front of the line. Search for [[inputs.apcupsd]] Enable by removing the # in the front of the line. In unRAID settings > UPS Settings, make sure Start APC UPS daemon is set to Yes . When completed, this file should be placed in the folder that we noted above. (Default is /mnt/user/appdata/telegraf/ ). Continue to the next step .","title":"Default Config File"},{"location":"1.5.0/install15/#edited-config-file","text":"If you want to just get up and running, you can download an already edited config file from this GitHub Repository . Raw link . This file should be placed in the folder that we noted above. (Default is /mnt/user/appdata/telegraf/ ). Continue to the next step .","title":"Edited Config File"},{"location":"1.5.0/install15/#start-the-container","text":"Now, we can finally start the container. Click on Apply to start the container. When you are back on the Docker tab of unRAID, click on the logs button on the far right side of the Telegraf container to open the container logs. You are waiting for the container to start up fully. You should see something along the lines of: 2021-01-13T14:21:36Z I! Starting Telegraf 1.17.0 2021-01-13T14:21:36Z I! Using config file: /etc/telegraf/telegraf.conf","title":"Start the Container"},{"location":"1.5.0/install15/#install-grafana","text":"","title":"Install Grafana"},{"location":"1.5.0/install15/#docker-container_2","text":"Click on the Apps tab in the toolbar. In the search bar (upper right), search for Grafana and you should see one from \"atribe\". Click the install button on the lower left of the card.","title":"Docker Container"},{"location":"1.5.0/install15/#settings_2","text":"So there is a setting you need to make sure are correct in this container: Network Type needs to be set to host . Name Setting Notes Host Port 1 3000 You can leave this default Host Path 1 /mnt/user/appdata/grafana You can leave this default Key 1 ip address Enter in the ip of your server. Key 2 enter in password Enter in the password you would like to use for the admin account.","title":"Settings"},{"location":"1.5.0/install15/#start-the-container_1","text":"Click Apply to start the container. Info If you do not care about the media portion of UUD, you can skip the rest of this guide. I would recommend you download UUD 1.4. It has everything this dashboard has but the media monitoring. You can find more information about UUD 1.4 here . TODO 1.4 link","title":"Start the Container"},{"location":"1.5.0/install15/#install-tautulli","text":"","title":"Install Tautulli"},{"location":"1.5.0/install15/#docker-container_3","text":"Click on the Apps tab in the toolbar. In the search bar (upper right), search for Tautulli . There are actually multiple versions: linuxserver, official, and hotio. While any of them should work, I will be using the one from \"linuxserver\".","title":"Docker Container"},{"location":"1.5.0/install15/#settings_3","text":"Default settings will work. Name Setting Notes Host Port 1 8181 You can leave this default Host Path 1 /mnt/user/appdata/tautulli/logs/ You can leave this default Key 1 99 You can leave this default Key 2 100 You can leave this default AppData Config Path /mnt/user/appdata/tautulli/config/ This is found under \"Show more settings\"","title":"Settings"},{"location":"1.5.0/install15/#start-the-container_2","text":"Click Apply to start the container.","title":"Start the Container"},{"location":"1.5.0/install15/#complete-the-tautulli-setup","text":"Click on the Docker tab of unRAID. Left click on the Tautulli icon and click on Web UI . On the Welcome screen, click on Next . On the Authentication screen, set the username and password you would like to use to access the administration panel of Tautulli. On the Plex Account screen, click the Sign In with Plex button. After you authenticate with your Plex account, click the Next button On the Plex Media Server screen, select your Plex server that has the internal IP. It should start with 172.x.x.x. Fill in the rest of the options as appropriate. Click on the Verify button. You should see next to it Server found! Click the Next button. On the Activity Logging page, adjust to your Ignore Interval to your liking. Click the Next button. For the next two screens, click on the Next button. Finally, click on the Finish button.","title":"Complete the Tautulli Setup"},{"location":"1.5.0/install15/#obtain-the-tautulli-api-key","text":"When you are on the main window of Tautulli, click on the cogs icon ( ) in the upper right corner > settings > Web Interface . Near the bottom of that page, you should see a section for your API . Either keep this page open, or copy your API key to a text document to use in the Varken Setup .","title":"Obtain the Tautulli API Key"},{"location":"1.5.0/install15/#obtain-maxminddb-key","text":"For Tautulli to work correctly, you need to obtain a MaxMind GeoLite license. This is free to do. 1: Sign up for a MaxMind account . Make sure to verify the account. 2: When logged in, click on the My account button in the upper right corner as denoted by the symbol and click on MY ACCOUNT . 3: Click on My License Key from the left side menu. 4: Click on Generate new license key button. 5: Enter in a description. I suggest \"Varken\". 6: For the prompt under the description asking about using GeoIP Update, select No . 7: Click Confirm . On the next screen, you will be presented with your license key. Keep this page open for the next step or copy your key to a safe place. If you close the page, you will not be able to see the key again. If this happens, you can create a new key.","title":"Obtain MaxMindDB Key"},{"location":"1.5.0/install15/#install-varken","text":"","title":"Install Varken"},{"location":"1.5.0/install15/#docker-container_4","text":"Click on the Apps tab in the toolbar. In the search bar (upper right), search for Varken and you should see one from \"Bander\". Click the install button on the lower left of the card.","title":"Docker Container"},{"location":"1.5.0/install15/#settings_4","text":"All of the default settings will work. I do advise you to change the time zone to your correct time zone. A list of time zones can be found here . You would be using the TZ database name column. Take note of where your config file will be located. Warning DO NOT HIT APPLY TO START THE CONTAINER YET! We need to set up the configuration file first!","title":"Settings"},{"location":"1.5.0/install15/#varkenini","text":"You need to edit the configuration yourself since it requires API keys. You can find the default varken.ini file on GitHub ( Raw version ). For more information on how to setup the Varken configuration, please visit this page .","title":"varken.ini"},{"location":"1.5.0/install15/#start-the-container_3","text":"Now that you have your configuration file set and in the proper place, we can go back to the container creation screen of Varken and click Apply to create and start the container.","title":"Start the Container"},{"location":"1.5.0/install15/#ultimate-unriad-dashboard","text":"TODO Find out if we are using github to distribute files or the unRAID forums Go to the Ultimate unRAID Dashboard forum Topic and scroll to the bottom of the first post. You will see a file attachment for VERSION 1.5. Click on the file attachment to download the JSON file. Right click on this link and click \"Save target as...\"","title":"Ultimate UNRIAD Dashboard"},{"location":"1.5.0/install15/#configuring-grafana","text":"In the Docker tab in unRAID, click on the Grafana icon and then select WebUI . When you are asked to log in, the default user is admin and the password is the one you set up while setting up Grafana .","title":"Configuring Grafana"},{"location":"1.5.0/install15/#adding-data-sources","text":"In the left menu, hover over the cog icon ( ) and then click on Data Sources . On the screen that opens up, click on Add Data Source .","title":"Adding Data Sources"},{"location":"1.5.0/install15/#telegraf","text":"Fill in the settings. If the setting is not in the table below, you can leave it default. Name Setting Notes Name InfluxDB You can name this what you want. I suggest InfluxDB or Telegraf Query Language InfluxQL HTML URL http://localhost:8686 Set this to the IP address of your server InfluxDB Details Database telegraf Case sensitive User Leave Blank Put in your username if you set one up. Setting one up is beyond the scope of this guide. Password Leave Blank Put in your password if you set one up. Setting one up is beyond the scope of this guide. Click on the Save & Test button and make sure you get a green bar just above saying Data source is working .","title":"Telegraf"},{"location":"1.5.0/varkenini/","text":"Configuring varken.ini This page is to show you how to configure varken.ini to work with Ultimate UNRAID Dashboard. The configuration file is broken up in to 2 sections: the global configuration, and the application configuration. You can set up applications and have them not be used in the global configuration. Generally, it is easier to set up your applications first so you know what to use for the global configuration. Application Setup Varken allows to gather metrics for the following applications: Sonarr Radarr Lidarr Tautulli Ombi Sickchill Unifi Controller The only application we are really worried about for UUD is Tautulli . We also want to set Varken up to send the data to InfluxDB . If you would like more information on how to set up the other services, please refer to the Official Varken Documentation . Create the Config File Navigate to the appdata folder of your UNRAID server. The default is /mnt/usr/appdata/ . You will need to make a Varken folder if one is not created already. The final path should be /mnt/usr/appdata/Varken . Within that path, create a file called varken.ini , or right click on this link and click on Save link as... and then copy the downloaded file in to your Varken folder. Open varken.ini in a text editor. (If you are using Windows, DO NOT USE NOTEPAD. Use something like Notepad++ or Visual Studio Code .) If you created a blank file, copy and paste the following code in to the file: Trimmed varken.ini [global] sonarr_server_ids = false radarr_server_ids = false lidarr_server_ids = false tautulli_server_ids = 1 ombi_server_ids = false sickchill_server_ids = false unifi_server_ids = false maxmind_license_key = xxxxxxxxxxxxxxxx [influxdb] url = influxdb.domain.tld port = 8086 ssl = false verify_ssl = false username = root password = root [tautulli-1] url = tautulli.domain.tld:8181 fallback_ip = 1.1.1.1 apikey = xxxxxxxxxxxxxxxx ssl = false verify_ssl = false get_activity = true get_activity_run_seconds = 30 get_stats = true get_stats_run_seconds = 3600 If you would like to configure more applications, here is the default varken.ini: (Or right click this link , Save link as... , and save as varken.ini ) Default varken.ini [global] sonarr_server_ids = 1,2 radarr_server_ids = 1,2 lidarr_server_ids = false tautulli_server_ids = 1 ombi_server_ids = 1 sickchill_server_ids = false unifi_server_ids = false maxmind_license_key = xxxxxxxxxxxxxxxx [influxdb] url = influxdb.domain.tld port = 8086 ssl = false verify_ssl = false username = root password = root [tautulli-1] url = tautulli.domain.tld:8181 fallback_ip = 1.1.1.1 apikey = xxxxxxxxxxxxxxxx ssl = false verify_ssl = false get_activity = true get_activity_run_seconds = 30 get_stats = true get_stats_run_seconds = 3600 [sonarr-1] url = sonarr1.domain.tld:8989 apikey = xxxxxxxxxxxxxxxx ssl = false verify_ssl = false missing_days = 7 missing_days_run_seconds = 300 future_days = 1 future_days_run_seconds = 300 queue = true queue_run_seconds = 300 [sonarr-2] url = sonarr2.domain.tld:8989 apikey = yyyyyyyyyyyyyyyy ssl = false verify_ssl = false missing_days = 7 missing_days_run_seconds = 300 future_days = 1 future_days_run_seconds = 300 queue = true queue_run_seconds = 300 [radarr-1] url = radarr1.domain.tld apikey = xxxxxxxxxxxxxxxx ssl = false verify_ssl = false queue = true queue_run_seconds = 300 get_missing = true get_missing_run_seconds = 300 [radarr-2] url = radarr2.domain.tld apikey = yyyyyyyyyyyyyyyy ssl = false verify_ssl = false queue = true queue_run_seconds = 300 get_missing = true get_missing_run_seconds = 300 [lidarr-1] url = lidarr1.domain.tld:8686 apikey = xxxxxxxxxxxxxxxx ssl = false verify_ssl = false missing_days = 30 missing_days_run_seconds = 300 future_days = 30 future_days_run_seconds = 300 queue = true queue_run_seconds = 300 [ombi-1] url = ombi.domain.tld apikey = xxxxxxxxxxxxxxxx ssl = false verify_ssl = false get_request_type_counts = true request_type_run_seconds = 300 get_request_total_counts = true request_total_run_seconds = 300 get_issue_status_counts = true issue_status_run_seconds = 300 [sickchill-1] url = sickchill.domain.tld:8081 apikey = xxxxxxxxxxxxxxxx ssl = false verify_ssl = false get_missing = true get_missing_run_seconds = 300 [unifi-1] url = unifi.domain.tld:8443 username = ubnt password = ubnt site = default usg_name = MyRouter ssl = false verify_ssl = false get_usg_stats_run_seconds = 300 InfluxDB The code block we are interested in for InfluxDB is the following: 1 2 3 4 5 6 7 [influxdb] url = influxdb.domain.tld port = 8086 ssl = false verify_ssl = false username = root password = root We are focusing mainly on line 2 from the code above. You want to enter in the ip address of your IDB instance. If you are running everything on the same machine, you should be able to use localhost or 127.0.0.1 for the IP address. Line # Setting Notes 2 IP Change to the IP address of your IDB instance 3 8086 Change to your IDB port. 8086 is default. 4 false 5 false 6 root If you have IDB set up with authentication, you put the username here. More Info 7 root If you have IDB set up with authentication, you put the password here. More Info Tautulli The next block we are going to take a look at is the tautulli-1 block: 1 2 3 4 5 6 7 8 9 10 [tautulli-1] url = tautulli.domain.tld:8181 fallback_ip = 1.1.1.1 apikey = xxxxxxxxxxxxxxxx ssl = false verify_ssl = false get_activity = true get_activity_run_seconds = 30 get_stats = true get_stats_run_seconds = 3600 We are focusing on lines 2-4 from the code above. If you are hosting Varken on the same computer that you are hosting Tautulli on, you should be able to use localhost or 127.0.0.1 for the IP address. Line # Setting Input Notes 2 url IP:port Change to the IP address and port of your Tautulli instance. Default port is 8181 3 fallback_ip Your public IP You should change this to your public IP address. 1 4 apikey Enter API key Enter in your Tautulli API key 2 . Replace all the x's 5 ssl false Set to true if you are using SSL to access Tautulli. If you are using it over a local network, you can leave this false. 6 verify_ssl false Set to true if you are using SSL to access Tautulli. If you are using it over a local network, you can leave this false. 7 get_activity true Pull stream information from Tautulli. 8 get_activity_run_seconds 30 How often in seconds to pull activity from Tautulli. Default = 30 9 get_stats true Pull library information from Tautulli. 10 get_stats_run_seconds 3600 How often in seconds to pull stats from Tautulli. Default = 3600 (5 min) 1 : For fallback_ip , you should use your public IP address. According to the Varken Documentation , the fallback_ip is used for location lookup when there is a failure to determine a location which generally happens when streaming over your local network. You can get your IP address by visiting WhatIsMyIP.com . Note: If you are using a VPN, it will use the location your VPN is connected to. 2 : You can obtain your Tautulli API key by navigating to your Tautulli instance. Go to Settings ( in upper right > Settings) > Web Interface > API Key . Replace the \"xxxxxxxxxxxxxxxx\" with your API key. Global Configuration Now that we have all of our applications set up to use UUD, we need to configure the global configuration. 1 2 3 4 5 6 7 8 9 [global] sonarr_server_ids = 1,2 radarr_server_ids = 1,2 lidarr_server_ids = false tautulli_server_ids = 1 ombi_server_ids = 1 sickchill_server_ids = false unifi_server_ids = false maxmind_license_key = xxxxxxxxxxxxxxxx The two lines we are focusing on are lines 5 and 9. Line # Setting Input Notes 5 tautulli_server_ids 1 We can leave this line alone 9 maxmind_license_key MaxMind license key Enter in the MaxMind license key that you obtained in #Obtain MaxMindDB License Key . For the rest of the settings, we need to disable the rest of the services unless you have set them up. To disable the rest of the services, replace all of the numbers following them with false . In the end, your global configuration should look along the lines of: 1 2 3 4 5 6 7 8 9 [global] sonarr_server_ids = false radarr_server_ids = false lidarr_server_ids = false tautulli_server_ids = 1 ombi_server_ids = false sickchill_server_ids = false unifi_server_ids = false maxmind_license_key = xxxxxxxxxxxxxxxx Final Configuration File When you complete everything above, save the file. Now you can start the container .","title":"Configuring varken.ini"},{"location":"1.5.0/varkenini/#configuring-varkenini","text":"This page is to show you how to configure varken.ini to work with Ultimate UNRAID Dashboard. The configuration file is broken up in to 2 sections: the global configuration, and the application configuration. You can set up applications and have them not be used in the global configuration. Generally, it is easier to set up your applications first so you know what to use for the global configuration.","title":"Configuring varken.ini"},{"location":"1.5.0/varkenini/#application-setup","text":"Varken allows to gather metrics for the following applications: Sonarr Radarr Lidarr Tautulli Ombi Sickchill Unifi Controller The only application we are really worried about for UUD is Tautulli . We also want to set Varken up to send the data to InfluxDB . If you would like more information on how to set up the other services, please refer to the Official Varken Documentation .","title":"Application Setup"},{"location":"1.5.0/varkenini/#create-the-config-file","text":"Navigate to the appdata folder of your UNRAID server. The default is /mnt/usr/appdata/ . You will need to make a Varken folder if one is not created already. The final path should be /mnt/usr/appdata/Varken . Within that path, create a file called varken.ini , or right click on this link and click on Save link as... and then copy the downloaded file in to your Varken folder. Open varken.ini in a text editor. (If you are using Windows, DO NOT USE NOTEPAD. Use something like Notepad++ or Visual Studio Code .) If you created a blank file, copy and paste the following code in to the file: Trimmed varken.ini [global] sonarr_server_ids = false radarr_server_ids = false lidarr_server_ids = false tautulli_server_ids = 1 ombi_server_ids = false sickchill_server_ids = false unifi_server_ids = false maxmind_license_key = xxxxxxxxxxxxxxxx [influxdb] url = influxdb.domain.tld port = 8086 ssl = false verify_ssl = false username = root password = root [tautulli-1] url = tautulli.domain.tld:8181 fallback_ip = 1.1.1.1 apikey = xxxxxxxxxxxxxxxx ssl = false verify_ssl = false get_activity = true get_activity_run_seconds = 30 get_stats = true get_stats_run_seconds = 3600 If you would like to configure more applications, here is the default varken.ini: (Or right click this link , Save link as... , and save as varken.ini ) Default varken.ini [global] sonarr_server_ids = 1,2 radarr_server_ids = 1,2 lidarr_server_ids = false tautulli_server_ids = 1 ombi_server_ids = 1 sickchill_server_ids = false unifi_server_ids = false maxmind_license_key = xxxxxxxxxxxxxxxx [influxdb] url = influxdb.domain.tld port = 8086 ssl = false verify_ssl = false username = root password = root [tautulli-1] url = tautulli.domain.tld:8181 fallback_ip = 1.1.1.1 apikey = xxxxxxxxxxxxxxxx ssl = false verify_ssl = false get_activity = true get_activity_run_seconds = 30 get_stats = true get_stats_run_seconds = 3600 [sonarr-1] url = sonarr1.domain.tld:8989 apikey = xxxxxxxxxxxxxxxx ssl = false verify_ssl = false missing_days = 7 missing_days_run_seconds = 300 future_days = 1 future_days_run_seconds = 300 queue = true queue_run_seconds = 300 [sonarr-2] url = sonarr2.domain.tld:8989 apikey = yyyyyyyyyyyyyyyy ssl = false verify_ssl = false missing_days = 7 missing_days_run_seconds = 300 future_days = 1 future_days_run_seconds = 300 queue = true queue_run_seconds = 300 [radarr-1] url = radarr1.domain.tld apikey = xxxxxxxxxxxxxxxx ssl = false verify_ssl = false queue = true queue_run_seconds = 300 get_missing = true get_missing_run_seconds = 300 [radarr-2] url = radarr2.domain.tld apikey = yyyyyyyyyyyyyyyy ssl = false verify_ssl = false queue = true queue_run_seconds = 300 get_missing = true get_missing_run_seconds = 300 [lidarr-1] url = lidarr1.domain.tld:8686 apikey = xxxxxxxxxxxxxxxx ssl = false verify_ssl = false missing_days = 30 missing_days_run_seconds = 300 future_days = 30 future_days_run_seconds = 300 queue = true queue_run_seconds = 300 [ombi-1] url = ombi.domain.tld apikey = xxxxxxxxxxxxxxxx ssl = false verify_ssl = false get_request_type_counts = true request_type_run_seconds = 300 get_request_total_counts = true request_total_run_seconds = 300 get_issue_status_counts = true issue_status_run_seconds = 300 [sickchill-1] url = sickchill.domain.tld:8081 apikey = xxxxxxxxxxxxxxxx ssl = false verify_ssl = false get_missing = true get_missing_run_seconds = 300 [unifi-1] url = unifi.domain.tld:8443 username = ubnt password = ubnt site = default usg_name = MyRouter ssl = false verify_ssl = false get_usg_stats_run_seconds = 300","title":"Create the Config File"},{"location":"1.5.0/varkenini/#influxdb","text":"The code block we are interested in for InfluxDB is the following: 1 2 3 4 5 6 7 [influxdb] url = influxdb.domain.tld port = 8086 ssl = false verify_ssl = false username = root password = root We are focusing mainly on line 2 from the code above. You want to enter in the ip address of your IDB instance. If you are running everything on the same machine, you should be able to use localhost or 127.0.0.1 for the IP address. Line # Setting Notes 2 IP Change to the IP address of your IDB instance 3 8086 Change to your IDB port. 8086 is default. 4 false 5 false 6 root If you have IDB set up with authentication, you put the username here. More Info 7 root If you have IDB set up with authentication, you put the password here. More Info","title":"InfluxDB"},{"location":"1.5.0/varkenini/#tautulli","text":"The next block we are going to take a look at is the tautulli-1 block: 1 2 3 4 5 6 7 8 9 10 [tautulli-1] url = tautulli.domain.tld:8181 fallback_ip = 1.1.1.1 apikey = xxxxxxxxxxxxxxxx ssl = false verify_ssl = false get_activity = true get_activity_run_seconds = 30 get_stats = true get_stats_run_seconds = 3600 We are focusing on lines 2-4 from the code above. If you are hosting Varken on the same computer that you are hosting Tautulli on, you should be able to use localhost or 127.0.0.1 for the IP address. Line # Setting Input Notes 2 url IP:port Change to the IP address and port of your Tautulli instance. Default port is 8181 3 fallback_ip Your public IP You should change this to your public IP address. 1 4 apikey Enter API key Enter in your Tautulli API key 2 . Replace all the x's 5 ssl false Set to true if you are using SSL to access Tautulli. If you are using it over a local network, you can leave this false. 6 verify_ssl false Set to true if you are using SSL to access Tautulli. If you are using it over a local network, you can leave this false. 7 get_activity true Pull stream information from Tautulli. 8 get_activity_run_seconds 30 How often in seconds to pull activity from Tautulli. Default = 30 9 get_stats true Pull library information from Tautulli. 10 get_stats_run_seconds 3600 How often in seconds to pull stats from Tautulli. Default = 3600 (5 min) 1 : For fallback_ip , you should use your public IP address. According to the Varken Documentation , the fallback_ip is used for location lookup when there is a failure to determine a location which generally happens when streaming over your local network. You can get your IP address by visiting WhatIsMyIP.com . Note: If you are using a VPN, it will use the location your VPN is connected to. 2 : You can obtain your Tautulli API key by navigating to your Tautulli instance. Go to Settings ( in upper right > Settings) > Web Interface > API Key . Replace the \"xxxxxxxxxxxxxxxx\" with your API key.","title":"Tautulli"},{"location":"1.5.0/varkenini/#global-configuration","text":"Now that we have all of our applications set up to use UUD, we need to configure the global configuration. 1 2 3 4 5 6 7 8 9 [global] sonarr_server_ids = 1,2 radarr_server_ids = 1,2 lidarr_server_ids = false tautulli_server_ids = 1 ombi_server_ids = 1 sickchill_server_ids = false unifi_server_ids = false maxmind_license_key = xxxxxxxxxxxxxxxx The two lines we are focusing on are lines 5 and 9. Line # Setting Input Notes 5 tautulli_server_ids 1 We can leave this line alone 9 maxmind_license_key MaxMind license key Enter in the MaxMind license key that you obtained in #Obtain MaxMindDB License Key . For the rest of the settings, we need to disable the rest of the services unless you have set them up. To disable the rest of the services, replace all of the numbers following them with false . In the end, your global configuration should look along the lines of: 1 2 3 4 5 6 7 8 9 [global] sonarr_server_ids = false radarr_server_ids = false lidarr_server_ids = false tautulli_server_ids = 1 ombi_server_ids = false sickchill_server_ids = false unifi_server_ids = false maxmind_license_key = xxxxxxxxxxxxxxxx","title":"Global Configuration"},{"location":"1.5.0/varkenini/#final-configuration-file","text":"When you complete everything above, save the file. Now you can start the container .","title":"Final Configuration File"}]}